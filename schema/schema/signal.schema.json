{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "id": "https://raw.githubusercontent.com/aica-technology/component-sdk/main/schema/schema/signal.schema.json",
  "title": "Component Signal",
  "description": "A signal associated with a dynamic component that can be an input or an output.",
  "type": "object",
  "properties": {
    "display_name": {
      "description": "The short name of this signal (to be displayed on the edge of the component).",
      "examples": [
        "Target Pose",
        "Sum",
        "Command Torque"
      ],
      "type": "string"
    },
    "description": {
      "description": "A description of the signal for tool-tips and documentation.",
      "type": "string"
    },
    "signal_name": {
      "description": "The registered name of the signal from which the default topic and parameter '<$signal_name>_topic' are determined.",
      "examples": [
        "target_pose",
        "sum",
        "command_torque"
      ],
      "type": "string"
    },
    "default_topic": {
      "description": "The default topic name assigned to this signal. If unspecified, it is assumed to be '~/<$signal_name>'. Setting the parameter '<$signal_name>_topic' will override the default value.",
      "default": "~/signal_name",
      "type": "string"
    },
    "reconfigurable_topic": {
      "description": "Indicate if the signal topic is reconfigurable and can be renamed while the component is inactive through the '<$signal_name>_topic' parameter.",
      "default": false,
      "type": "boolean"
    },
    "signal_type": {
      "description": "The fixed type of this signal.",
      "$ref": "signal_type.schema.json"
    },
    "signal_types": {
      "description": "An array of signal types supported by configurable typing. The active type is set through the '<$signal_name>_type' parameter.",
      "type": "array",
      "items": {
        "$ref": "signal_type.schema.json"
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "default_type": {
      "description": "The default type of this signal.",
      "$ref": "signal_type.schema.json"
    },
    "reconfigurable_type": {
      "description": "Indicate if the signal type is reconfigurable and can be renamed while the component is inactive through the '<$signal_name>_type' parameter.",
      "default": false,
      "type": "boolean"
    }
  },
  "required": [
    "display_name",
    "description",
    "signal_name"
  ],
  "oneOf": [
    {
      "required": [
        "signal_type"
      ]
    },
    {
      "required": [
        "signal_types",
        "default_type"
      ]
    }
  ],
  "if": {
    "not": {
      "required": [
        "signal_type"
      ]
    }
  },
  "else": {
    "if": {
      "properties": {
        "signal_type": {
          "const": "other"
        }
      }
    },
    "then": {
      "custom_signal_type": {
        "description": "The custom signal type of the signal",
        "examples": [
          "sensor_msgs::msg::JointState",
          "geometry_msgs::msg::Pose"
        ],
        "type": "string"
      },
      "required": [
        "custom_signal_type"
      ]
    }
  }
}