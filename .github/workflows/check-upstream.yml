name: Check for updated upstream images

# Run scheduled workflow
on:
  schedule:
    - cron: '00 5 * * MON-FRI'
  workflow_dispatch:

env:
  CI_BRANCH: 'ci'

jobs:

  check-hash:
    runs-on: ubuntu-latest
    name: Check latest hashes of ros2-modulo:humble images
    outputs:
      humble_id: ${{ steps.check_humble.outputs.id }}
      latest_rebuild: ${{ steps.check_humble.outputs.rebuild }}
      humble_devel_id: ${{ steps.check_humble_devel.outputs.id }}
      devel_rebuild: ${{ steps.check_humble_devel.outputs.rebuild }}
    steps:
      - name: Checkout CI branch
        uses: actions/checkout@v3
        with:
          ref: ${{ env.CI_BRANCH }}

      - name: Check latest hash of ros2-modulo:humble image
        id: check_humble
        run: |
          curl -o ros2-modulo-humble-hash https://raw.githubusercontent.com/aica-technology/docker-images/ci/ros2_modulo/humble-hash
          NEW_HASH=$(cat ./ros2-modulo-humble-hash || echo '')
          OLD_HASH=$(cat ./humble-hash || echo '')
          if [ "${NEW_HASH}" = "${OLD_HASH}" ]; then
            echo "The ros2-modulo:humble image did not change."
            echo "::set-output name=rebuild::false"
            echo "::set-output name=id::${OLD_HASH}"
          else
            echo "ros2-modulo:humble image has been updated, rebuilding image now..."
            echo "::set-output name=rebuild::true"
            echo "::set-output name=id::${NEW_HASH}"
          fi

      - name: Check latest hash on ros2-modulo:humble-devel image
        id: check_humble_devel
        run: |
          curl -o ros2-modulo-humble-devel-hash https://raw.githubusercontent.com/aica-technology/docker-images/ci/ros2_modulo/humble-devel-hash
          NEW_HASH=$(cat ./ros2-modulo-humble-devel-hash || echo '')
          OLD_HASH=$(cat ./humble-devel-hash || echo '')
          if [ "${NEW_HASH}" = "${OLD_HASH}" ]; then
            echo "The ros2-modulo:humble-devel image did not change."
            echo "::set-output name=rebuild::false"
            echo "::set-output name=id::${OLD_HASH}"
          else
            echo "ros2-modulo:humble-devel image has been updated, rebuilding image now..."
            echo "::set-output name=rebuild::true"
            echo "::set-output name=id::${NEW_HASH}"
          fi

  rebuild-latest-image:
    needs: check-hash
    runs-on: ubuntu-latest
    name: Rebuild the latest image
    if: needs.check-hash.outputs.latest_rebuild == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Build new latest image
        uses: ./.github/actions/build-push
        with:
          base_tag: humble
          output_tag: latest
          secret: ${{ secrets.GITHUB_TOKEN }}

  rebuild-devel-image:
    needs: check-hash
    runs-on: ubuntu-latest
    name: Rebuild the devel image
    if: needs.check-hash.outputs.devel_rebuild == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Build new devel image
        uses: ./.github/actions/build-push
        with:
          base_tag: humble-devel
          output_tag: devel
          secret: ${{ secrets.GITHUB_TOKEN }}

  write-hashes:
    needs: check-hash
    runs-on: ubuntu-latest
    name: Create new ci branch from main and write hashes
    if: needs.check-hash.outputs.latest_rebuild == 'true' || needs.check-hash.outputs.devel_rebuild == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Recreate ci branch
        run: |
          git config user.name github-actions
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git checkout -b ${{ env.CI_BRANCH }} origin/main && git push -f -u origin ${{ env.CI_BRANCH }}

      - name: Write latest hash to file
        uses: ./.github/actions/write-hash
        with:
          hash: ${{ needs.check-hash.outputs.humble_id }}
          file: './humble-hash'
          ci_branch: ${{ env.CI_BRANCH }}

      - name: Write devel hash to file
        uses: ./.github/actions/write-hash
        with:
          hash: ${{ needs.check-hash.outputs.humble_devel_id }}
          file: './humble-devel-hash'
          ci_branch: ${{ env.CI_BRANCH }}
