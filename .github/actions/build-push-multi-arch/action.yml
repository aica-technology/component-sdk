name: 'Build and Push (Multi-Arch)'
description: 'Build the Docker image for amd64 and arm64 and push to GitHub Container Registry'
author: aica-technology
branding:
  icon: file-plus
  color: gray-dark
inputs:
  repo_branch:
    description: 'The branch of the repository to check out'
    required: false
    default: ''
  base_tag:
    description: 'The tag of the modulo base image to use'
    required: true
    default: ''
  output_tag:
    description: 'The tag for the output image'
    required: true
    default: ''
  secret:
    description: 'GitHub Container Registry secret'
    required: true

runs:
  using: "composite"
  steps:
    - name: Parse inputs
      run: |
        BASE_TAG=${{ inputs.base_tag }}
        OUTPUT_TAG=${{ inputs.output_tag }}
        echo "::debug::Using base image tag ${BASE_TAG}"
        echo "BASE_TAG=${BASE_TAG}" >> $GITHUB_ENV
        IMAGE_NAME=component-sdk:${OUTPUT_TAG}
        echo "::debug::Generated image name will be ${IMAGE_NAME}"
        echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
        
        if [ -z ${{ inputs.repo_branch }} ]; then
          BRANCH=${GITHUB_REF#refs/heads/}
        else
          BRANCH=${{ inputs.repo_branch }}
        fi
        echo "::debug::Using repo branch ${BRANCH}"
        echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
      shell: bash

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ env.BRANCH }}

    - name: Login to GitHub Package Registry
      run: echo "${{ inputs.secret }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      shell: bash

    - name: Build and push image
      run: |
        IMAGE_NAME=${{ env.IMAGE_NAME }}
        
        docker buildx build . \
          --build-arg BASE_TAG=${BASE_TAG} \
          --platform=linux/arm64,linux/amd64 \
          --push --tag ghcr.io/${{ github.repository_owner }}/${IMAGE_NAME}
      shell: bash